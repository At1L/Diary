#include "pch.h"
#include "TaskPage.xaml.h"
#include "TaskClass.h"
#include "TaskPage.xaml.g.h"
#if __has_include("TaskPage.g.cpp")
#include "TaskPage.g.cpp"
#endif

#include <vector>
#include <string>

using namespace winrt;
using namespace Microsoft::UI::Xaml;

// To learn more about WinUI, the WinUI project structure,
// and more about our project templates, see: http://aka.ms/winui-project-info.
namespace winrt::DairyApp::implementation
{
    TaskPage::TaskPage() : mContacts(single_threaded_observable_vector<DairyApp::Contact>({ {L"Claudiu", L"HBann"}, {L"Someone", L"Else"} }))
    {
        InitializeComponent();
    }
    int32_t TaskPage::MyProperty()
    {
        throw hresult_not_implemented();
    }

    void TaskPage::MyProperty(int32_t /* value */)
    {
        throw hresult_not_implemented();
    }

    /*void TaskPage::AddNew_Click(winrt::Windows::Foundation::IInspectable const& sender, winrt::Microsoft::UI::Xaml::RoutedEventArgs const& e)
    {
        
    }*/

    void TaskPage::OnButtonClickChange(IInspectable const& /*sender*/,
        Microsoft::UI::Xaml::RoutedEventArgs const& /*e*/)
    {
        for (auto contact : Contacts())
        {
            contact.LastName(contact.LastName() + L" " + contact.LastName());
        }
    }

    Windows::Foundation::Collections::IObservableVector<DairyApp::Contact> TaskPage::Contacts()
    {
        return mContacts;
    }

}



//void winrt::DairyApp::implementation::TaskPage::itemListView_SelectionChanged(winrt::Windows::Foundation::IInspectable const& sender, winrt::Microsoft::UI::Xaml::Controls::SelectionChangedEventArgs const& e)
//{
//    // C# code-behind
//
//// The data template is defined to display a Contact object (class definition shown below), and the text
//// displayed is bound to the Contact object's Name attribute.
//
//    class Contact
//    {
//        std::string FirstName;
//        std::string LastName;
//        std::string Company;
//        std::string Name = FirstName + " " + LastName;
//
//    public:
//        Contact(std::string firstName, std::string lastName, std::string company)
//        {
//            FirstName = firstName;
//            LastName = lastName;
//            Company = company;
//        }
//    };
//
//    // The ItemsSource for the ListView is generated by a method of the Contact class called
//    // GetContactsAsync().This method pulls data from an internal data source and creates
//    // Contact objects from that data. Those Contact objects are placed in a collection
//    // which is returned from the GetContactsAsync() function.
//    IInspectable ItemsSource(Contact);
//
//    void ItemsSource(IInspectable Contact);
//}
>>>>>>> 15062efd9c4772fe358ae0eb0e3f63e7985cbb83
